// Code generated by MockGen. DO NOT EDIT.
// Source: service.go

// Package main is a generated GoMock package.
package main

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockRepoInterface is a mock of RepoInterface interface.
type MockRepoInterface struct {
	ctrl     *gomock.Controller
	recorder *MockRepoInterfaceMockRecorder
}

// MockRepoInterfaceMockRecorder is the mock recorder for MockRepoInterface.
type MockRepoInterfaceMockRecorder struct {
	mock *MockRepoInterface
}

// NewMockRepoInterface creates a new mock instance.
func NewMockRepoInterface(ctrl *gomock.Controller) *MockRepoInterface {
	mock := &MockRepoInterface{ctrl: ctrl}
	mock.recorder = &MockRepoInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRepoInterface) EXPECT() *MockRepoInterfaceMockRecorder {
	return m.recorder
}

// DeleteById mocks base method.
func (m *MockRepoInterface) DeleteById(model interface{}, id uint) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteById", model, id)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteById indicates an expected call of DeleteById.
func (mr *MockRepoInterfaceMockRecorder) DeleteById(model, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteById", reflect.TypeOf((*MockRepoInterface)(nil).DeleteById), model, id)
}

// GetPlayersFromRoom mocks base method.
func (m *MockRepoInterface) GetPlayersFromRoom(arg0 uint) ([]Users, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPlayersFromRoom", arg0)
	ret0, _ := ret[0].([]Users)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPlayersFromRoom indicates an expected call of GetPlayersFromRoom.
func (mr *MockRepoInterfaceMockRecorder) GetPlayersFromRoom(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPlayersFromRoom", reflect.TypeOf((*MockRepoInterface)(nil).GetPlayersFromRoom), arg0)
}

// Save mocks base method.
func (m *MockRepoInterface) Save(arg0 interface{}) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Save indicates an expected call of Save.
func (mr *MockRepoInterfaceMockRecorder) Save(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockRepoInterface)(nil).Save), arg0)
}
